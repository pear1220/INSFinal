<?xml version="1.0" encoding="UTF-8"?>

<!-- ==== #26. mapper 기본설정 ==== -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 

<!-- ==== #27. 루트 엘리먼트 & 네임스페이스 설정(프로젝트 전체내에서 유일해야 한다.) ==== -->
<mapper namespace="jihye">

  <!-- 개인정보 수정을 위한 로그인한 유저의 정보를 불러오기 -->
  <select id="getMyProfile" parameterType="String"   resultType="com.spring.finalins.model.MemberVO">
     select userid, pwd, name, nickname, email, tel1, tel2, tel3, leave_status, job, birthday, org_filename, ins_personal_alarm, server_filename
           ,file_size
     from ins_member
     where userid = #{userid}
  </select>
  
  
  <!-- 회원정보수정 업데이트 하기 -->
  <update id="updateMyProfile" parameterType="com.spring.finalins.model.MemberVO">
     update ins_member set pwd=#{pwd}, nickname=#{nickname}, tel1=#{tel1},tel2=#{tel2}, tel3=#{tel3},job=#{job}
     where userid = #{userid}
   </update>
   
  
   <!-- 회원탈퇴(leave_status 업데이트 하기) -->
   <update id="deleteMyAccount" parameterType="String">
     update ins_member set leave_status = 1
     where userid = #{userid}
   </update>
   
   
   <!-- 내가 속한 팀목록 보여주기 -->
    <select id="getTeamList" parameterType="String" resultType="com.spring.finalins.model.TeamVO">
	    select team_name
		from ins_team A join ins_team_member B
		on A.team_idx = B.fk_team_idx
		where team_userid = #{userid}   
   </select>
   
   
   
    <!-- 내가 활동한 기록 보여주기 -->
<!--     <resultMap type="HashMap" id="getMyRecordListMap">
      <result property="RECORD_USERID"           column="record_userid"           javaType="String" />
      <result property="PROJECT_RECORD_TIME"      column="project_record_time"    javaType="String" />
      <result property="RECORD_DML_STATUS"        column="record_dml_status"      javaType="String" /> 
    </resultMap>
    
    <select id="getMyRecordList" parameterType="String" resultMap="getMyRecordListMap">
	    select record_userid, project_record_time, record_dml_status
		from ins_project_record
		where record_userid = #{userid}
		order by project_record_time desc
   </select> -->
    <resultMap type="HashMap" id="getMyRecordListMap">
      <result property="PROJECT_NAME"            column="project_Name"           javaType="String" />
      <result property="LIST_NAME"               column="list_name"              javaType="String" />
      <result property="CARD_TITLE"              column="card_title"             javaType="String" />
      <result property="RECORD_USERID"           column="record_userid"          javaType="String" />
      <result property="PROJECT_RECORD_TIME"     column="project_record_time"    javaType="String" />
      <result property="RECORD_DML_STATUS"       column="record_dml_status"      javaType="String" /> 
    </resultMap>   
    <select id="getMyRecordList" parameterType="String" resultMap="getMyRecordListMap">
	    select project_Name, list_name, card_title, record_userid, project_record_time, record_dml_status
		from ins_project_record A join ins_project B
		on A.fk_project_idx = B.project_idx
		join ins_list C
		on A.fk_list_idx = C.list_idx
		join ins_card D
		on A.fk_card_idx = D.card_idx
		where record_userid =#{userid}
		order by project_record_time desc
   </select>
   
   
   
   
   <!-- 프로필 이미지 변경하기 -->
    <update id="updateProfileImg" parameterType="HashMap">
      update ins_member set org_filename = #{org_filename} ,server_filename = #{server_filename} ,file_size = #{file_size}
       where userid = #{userid}
   </update> 
   
   
    <!-- 직업별 인원수(통계) -->
   <resultMap type="HashMap" id="getChartJSON_jobMap">
      <result property="JOB"    column="job"      javaType="String" />
      <result property="CNT"       column="cnt"         javaType="String" />
      <result property="PERCENT"    column="percent"    javaType="String" /> 
   </resultMap>
   <select id="getChartJSON_job" resultMap="getChartJSON_jobMap">
    select  job , count(*) AS cnt, round( count(*)/(select count(*) from ins_member)*100, 1) as percent  
   from ins_member
   group by job
   order by job desc
   </select>
   
   
   <!-- 나이별 인원수(통계) -->
    <resultMap type="HashMap" id="agelineMap">
     <result property="AGELINE"    column="ageline"    javaType="String" />
     <result property="CNT"       column="cnt"         javaType="String" />
   </resultMap>

   <select id="adminChartJSON_ageline"  resultMap="agelineMap">
	   select  decode(trunc(ageline, -1), 0, '10대미만', to_char(trunc(ageline,-1)|| '대' )) as AGELINE
	           ,count(*) as CNT
	   from
	   (
	   select EXTRACT(YEAR FROM SYSDATE) - extract(year from birthday) AS ageline
	   from ins_member
	   )
	   group by ageline
	   order by ageline   
   </select>
   

</mapper>